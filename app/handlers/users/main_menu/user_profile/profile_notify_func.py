from data.loader import dp, bot
from data.config import ConfigBot
from data.loader_keyboard import LoaderInlineKeyboards
from data.states_groups import ProfileState

from database.requests.user_db import load_user_data, is_user_in_data, save_user_data
from database.requests.admin_db import load_admin_data, is_admin_in_data

from misc.loggers import logger
from misc.libraries import types

"""–°–æ–∑–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏ –±–æ—Ç–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π."""
@dp.callback_query_handler(lambda callback_data: callback_data.data == "NOTIFY")
async def notify_user_handler(callback_query: types.CallbackQuery):
	"""–û–±—ä—è–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å –≤—ã–≤–æ–¥–æ–º –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏."""
	ADMIN_DATA_DB = load_admin_data()
	USER_DATA_DB = load_user_data()

	try:
		"""–û–±—ä—è–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é —Å –≤—ã–≤–æ–¥–æ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ: USER_ID."""
		USER_ID = ConfigBot.USERID(callback_query)

		if is_user_in_data(USER_ID, USER_DATA_DB):
			"""–û–±—ä—è–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é —Å –≤—ã–≤–æ–¥–æ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
			USER_VERIFICATION = ConfigBot.USERVERIFY(callback_query)

			if USER_VERIFICATION is None or USER_VERIFICATION is False:
				logger.warning(f"‚ö†Ô∏è –ù–µ–≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å [@{ConfigBot.USERNAME(callback_query)}] –ø–æ–ø—ã—Ç–∞–ª—Å—è –∑–∞–π—Ç–∏ –≤ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.")
			
			elif USER_VERIFICATION:
				"""–í—ã–≤–æ–¥–∏–º inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –º–µ–Ω—é —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π."""
				notify_menu_inline_keyboard = LoaderInlineKeyboards(callback_query).INLINE_KEYBOARDS_NOTIFYMENU

				if is_admin_in_data(USER_ID, ADMIN_DATA_DB):
					"""–û–±—ä—è–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é —Å –≤—ã–≤–æ–¥–æ–º —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è—Ö –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏."""
					INFO_NOTIFY_MENU_MESSAGE = f"üí¨ –¢–µ–∫—É—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è—Ö.\n\n" \
											   f" ‚Ä¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± <b>¬´–ó–∞–ø—É—Å–∫–µ –±–æ—Ç–∞¬ª</b> - <code>{'–í–∫–ª' if ConfigBot.GETNOTIFY('NOTIFY_RUN', True, callback_query) else '–í—ã–∫–ª'}</code>\n\n" \
											   f" ‚Ä¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± <b>¬´–†–∞—Ü–∏–æ–Ω–µ¬ª</b> - <code>{'–í–∫–ª' if ConfigBot.GETNOTIFY('NOTIFY_RATION', True, callback_query) else '–í—ã–∫–ª'}</code>\n\n" \
											   f" ‚Ä¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± <b>¬´–ö–æ–¥–µ–∫—Å–µ —Å–∏–ª—ã¬ª</b> - <code>{'–í–∫–ª' if ConfigBot.GETNOTIFY('NOTIFY_SPORT', True, callback_query) else '–í—ã–∫–ª'}</code>\n\n" \
											   f" ‚Ä¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± <b>¬´–û–±–Ω–æ–≤–ª–µ–Ω–∏—è—Ö¬ª</b> - <code>{'–í–∫–ª' if ConfigBot.GETNOTIFY('NOTIFY_UPDATE', True, callback_query) else '–í—ã–∫–ª'}</code>\n"

				elif not is_admin_in_data(USER_ID, ADMIN_DATA_DB):
					"""–û–±—ä—è–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é —Å –≤—ã–≤–æ–¥–æ–º —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è—Ö –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π."""
					INFO_NOTIFY_MENU_MESSAGE = f"üí¨ –¢–µ–∫—É—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è—Ö.\n\n" \
											   f" ‚Ä¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± <b>¬´–†–∞—Ü–∏–æ–Ω–µ¬ª</b> - <code>{'–í–∫–ª' if ConfigBot.GETNOTIFY('NOTIFY_RATION', False, callback_query) else '–í—ã–∫–ª'}</code>\n\n" \
											   f" ‚Ä¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± <b>¬´–ö–æ–¥–µ–∫—Å–µ —Å–∏–ª—ã¬ª</b> - <code>{'–í–∫–ª' if ConfigBot.GETNOTIFY('NOTIFY_SPORT', False, callback_query) else '–í—ã–∫–ª'}</code>\n\n" \
											   f" ‚Ä¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± <b>¬´–û–±–Ω–æ–≤–ª–µ–Ω–∏—è—Ö¬ª</b> - <code>{'–í–∫–ª' if ConfigBot.GETNOTIFY('NOTIFY_UPDATE', False, callback_query) else '–í—ã–∫–ª'}</code>\n"

				else:
					logger.error("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏: %s", is_admin_in_data(USER_ID, ADMIN_DATA_DB))
				
				await bot.edit_message_caption(caption = INFO_NOTIFY_MENU_MESSAGE, 
											   chat_id = callback_query.message.chat.id, 
											   message_id = callback_query.message.message_id, 
											   reply_markup = notify_menu_inline_keyboard)
				
		else:
			logger.warning(f"‚ö†Ô∏è –ù–µ–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å [@{ConfigBot.USERNAME(callback_query)}] –ø–æ–ø—ã—Ç–∞–ª—Å—è –∑–∞–π—Ç–∏ –≤ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.")
	except Exception as e:
		logger.error("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: %s", e)

"""–°–æ–∑–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ callback –∑–∞–ø—Ä–æ—Å–æ–≤ –æ–± –≤—ã–∫–ª—é—á–µ–Ω–∏—è/–≤–∫–ª—é—á–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π."""
@dp.callback_query_handler(lambda callback_data: callback_data.data in ["NOTIFY_RUNS", "NOTIFY_RATIONS", "NOTIFY_SPORTS", "NOTIFY_UPDATES"])
async def notify_user_handler(callback_query: types.CallbackQuery) -> ProfileState:
	try:
		"""–û–±—ä—è–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å –≤—ã–≤–æ–¥–æ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏ callback –¥–∞–Ω–Ω—ã–º–∏."""
		USER_DATA_DB = load_user_data()
		CALLBACK_DATA = callback_query.data

		"""–û–±—ä—è–≤–ª—è–µ–º —Å–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π."""
		NOTIFY_MAP = {
			"NOTIFY_RUNS": ("NOTIFY_RUN", True, "ADMIN_NOTIFY", "–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"),
			"NOTIFY_RATIONS": ("NOTIFY_RATION", False, "USER_NOTIFY", "–†–∞—Ü–∏–æ–Ω"),
			"NOTIFY_SPORTS": ("NOTIFY_SPORT", False, "USER_NOTIFY", "–ö–æ–¥–µ–∫—Å —Å–∏–ª—ã"),
			"NOTIFY_UPDATES": ("NOTIFY_UPDATE", False, "USER_NOTIFY", "–û–±–Ω–æ–≤–ª–µ–Ω–∏—è"),
		}

		if CALLBACK_DATA in NOTIFY_MAP:
			NOTIFY_TYPE, IS_ADMIN, NOTIFY_CATEGORY, TEXT_NOTIFY = NOTIFY_MAP[CALLBACK_DATA]

			if ConfigBot.GETNOTIFY(NOTIFY_TYPE, IS_ADMIN, callback_query):
				USER_DATA_DB[str(ConfigBot.USERID(callback_query))]["NOTIFY_DATA"][NOTIFY_CATEGORY][NOTIFY_TYPE] = False

				await bot.answer_callback_query(callback_query.id, text = f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è ¬´{TEXT_NOTIFY}¬ª –≤—ã–∫–ª—é—á–µ–Ω—ã.")

			elif not ConfigBot.GETNOTIFY(NOTIFY_TYPE, IS_ADMIN, callback_query):
				USER_DATA_DB[str(ConfigBot.USERID(callback_query))]["NOTIFY_DATA"][NOTIFY_CATEGORY][NOTIFY_TYPE] = True

				await bot.answer_callback_query(callback_query.id, text = f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è ¬´{TEXT_NOTIFY}¬ª –≤–∫–ª—é—á–µ–Ω—ã.")

			save_user_data(USER_DATA_DB)

			await notify_user_keyboard_handler(callback_query)
	except Exception as e:
		logger.error("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: %s", e)

"""–°–æ–∑–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞ —Å–≤—è–∑–∞–Ω–Ω—ã–π —Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏ –∏ –∏–∑–±–µ–∂–∞–Ω–∏—è —Ä–µ–∫—É—Ä—Å–∏–∏."""
async def notify_user_keyboard_handler(callback_query: types.CallbackQuery):
	try:
		"""–û–±—ä—è–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å –≤—ã–≤–æ–¥–æ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏ –≤—ã–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ: USER_ID."""
		ADMIN_DATA_DB = load_admin_data()
		USER_ID = ConfigBot.USERID(callback_query)

		"""–û–±—ä—è–≤–ª—è–µ–º —Å–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π."""
		NOTIFY_TYPES = {
			'NOTIFY_RUN': '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± <b>¬´–ó–∞–ø—É—Å–∫–µ –±–æ—Ç–∞¬ª</b>',
			'NOTIFY_RATION': '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± <b>¬´–†–∞—Ü–∏–æ–Ω–µ¬ª</b>',
			'NOTIFY_SPORT': '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± <b>¬´–ö–æ–¥–µ–∫—Å–µ —Å–∏–ª—ã¬ª</b>',
			'NOTIFY_UPDATE': '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± <b>¬´–û–±–Ω–æ–≤–ª–µ–Ω–∏—è—Ö¬ª</b>'
		}

		INFO_NOTIFY_MENU_MESSAGE = f"üí¨ –¢–µ–∫—É—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è—Ö.\n\n"

		if is_admin_in_data(USER_ID, ADMIN_DATA_DB):
			INFO_NOTIFY_MENU_MESSAGE += " ‚Ä¢ " + " ‚Ä¢ ".join([f"{value} - <code>{'–í–∫–ª' if ConfigBot.GETNOTIFY(key, True, callback_query) else '–í—ã–∫–ª'}</code>\n\n" for key, value in NOTIFY_TYPES.items()])
		
		elif not is_admin_in_data(USER_ID, ADMIN_DATA_DB):
			INFO_NOTIFY_MENU_MESSAGE += " ‚Ä¢ " + " ‚Ä¢ ".join([f"{value} - <code>{'–í–∫–ª' if ConfigBot.GETNOTIFY(key, False, callback_query) else '–í—ã–∫–ª'}</code>\n\n" for key, value in NOTIFY_TYPES.items() if key != 'NOTIFY_RUN'])

		else:
			logger.warning(f"‚ö†Ô∏è –ù–µ–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å [@{ConfigBot.USERNAME(callback_query)}] –ø–æ–ø—ã—Ç–∞–ª—Å—è –∑–∞–π—Ç–∏ –≤ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.")

		"""–í—ã–≤–æ–¥–∏–º inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –º–µ–Ω—é —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π."""
		notify_menu_inline_keyboard = LoaderInlineKeyboards(callback_query).INLINE_KEYBOARDS_NOTIFYMENU

		await bot.edit_message_caption(caption = INFO_NOTIFY_MENU_MESSAGE, 
									   chat_id = callback_query.message.chat.id, 
									   message_id = callback_query.message.message_id,
									   reply_markup = notify_menu_inline_keyboard)
	except Exception as e:
		logger.error("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: %s", e)