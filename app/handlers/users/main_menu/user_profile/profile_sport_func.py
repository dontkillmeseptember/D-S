from data.loader import dp, bot
from data.config import ConfigBot
from data.loader_keyboard import LoaderInlineKeyboards
from data.states_groups import ProfileState

from database.requests.user_db import load_user_data, is_user_in_data, save_user_data
from database.requests.sport_db import load_sport_data

from misc.loggers import logger
from misc.libraries import types

"""–°–æ–∑–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å–ø–æ—Ä—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
@dp.callback_query_handler(lambda callback_data: callback_data.data == "CHANGE_SPORT_USERS", state = [ProfileState.SelectedNewSportState, None])
async def change_sport_users_handler(callback_query: types.CallbackQuery):
	"""–û–±—ä—è–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å –≤—ã–≤–æ–¥–æ–º –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏."""
	USER_DATA_DB = load_user_data()

	try:
		"""–û–±—ä—è–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é —Å –≤—ã–≤–æ–¥–æ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ: USER_ID."""
		USER_ID = ConfigBot.USERID(callback_query)

		if is_user_in_data(USER_ID, USER_DATA_DB):
			"""–û–±—ä—è–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é —Å –≤—ã–≤–æ–¥–æ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
			USER_VERIFICATION = ConfigBot.USERVERIFY(callback_query)

			if USER_VERIFICATION is None or USER_VERIFICATION is False:
				logger.warning(f"‚ö†Ô∏è –ù–µ–≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å [@{ConfigBot.USERNAME(callback_query)}] –ø–æ–ø—ã—Ç–∞–ª—Å—è –∑–∞–π—Ç–∏ –≤ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è.")

			elif USER_VERIFICATION:
				"""–û–±—ä—è–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é —Å –≤—ã–≤–æ–¥–æ–º inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –≤—ã–±–æ—Ä–∞ –Ω–æ–≤–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
				change_sport_inline_keyboard = LoaderInlineKeyboards(callback_query).INLINE_KEYBOARDS_CHANGESPORT

				await bot.edit_message_caption(caption = f"üí¨ <a href='https://t.me/{ConfigBot.USERNAME(callback_query)}'>{ConfigBot.USERLASTNAME(callback_query)}</a>, e—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ <b>–∏–∑–º–µ–Ω–∏—Ç—å</b> —Ç–µ–∫—É—â–µ–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ –Ω–∞ –¥—Ä—É–≥–æ–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ <b>–Ω—É–∂–Ω–æ–µ</b> –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ.\n\n"
								   						 f"–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –≤–∞–º —Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø–æ–º–æ—â—å, –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ –Ω–∞—à–µ–π <a href='https://t.me/{ConfigBot().AUTHOR}'><b>–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏</b></a>", 
								   			   chat_id = callback_query.message.chat.id, 
											   message_id = callback_query.message.message_id, 
											   reply_markup = change_sport_inline_keyboard)
				
				await ProfileState.SelectedNewSportState.set()

		else:
			logger.warning(f"‚ö†Ô∏è –ù–µ–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å [@{ConfigBot.USERNAME(callback_query)}] –ø–æ–ø—ã—Ç–∞–ª—Å—è –∑–∞–π—Ç–∏ –≤ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è.")
	except Exception as e:
		logger.error("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: %s", e)

"""–°–æ–∑–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–∞–∑—ã, –≥–¥–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∏–º–∞–µ—Ç –Ω–∞ –Ω—É–∂–Ω–æ–µ –µ–º—É —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ –∏ –≤—ã–±–∏—Ä–∞–µ—Ç –Ω–æ–≤–æ–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ."""
@dp.callback_query_handler(lambda callback_data: callback_data.data and callback_data.data.startswith("sport:"), state = ProfileState.SelectedNewSportState)
async def change_sport_handler(callback_query: types.CallbackQuery):
	"""–û–±—ä—è–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å –≤—ã–≤–æ–¥–æ–º –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏."""
	USER_DATA_DB = load_user_data()
	SPORT_DATA_DB = load_sport_data()

	try:
		"""–û–±—ä—è–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é —Å –≤—ã–≤–æ–¥–æ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ: USER_ID."""
		USER_ID = ConfigBot.USERID(callback_query)

		if is_user_in_data(USER_ID, USER_DATA_DB):
			"""–ò–∑–º–µ–Ω—è–µ—Ç —Ç–µ–∫—É—â–∏–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ –Ω–∞ –Ω–æ–≤–æ–µ, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã–±—Ä–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å."""
			USER_DATA_DB[str(USER_ID)]["SELECTED_SPORT"]["SELECTED_SPORT_NAME"] = callback_query.data

			save_user_data(USER_DATA_DB)

			SPORT_DATA_ID = next((sport_data for sport_id, sport_data in SPORT_DATA_DB.items() if sport_data["CALLBACK_DATA_SPORT"] == callback_query.data), None)

			if SPORT_DATA_ID:
				await bot.answer_callback_query(callback_query.id, text = f"–í—ã —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–∏–ª–∏ ¬´{SPORT_DATA_ID['NAME_SPORT'][2:]}¬ª.")
			
			await change_sport_users_handler(callback_query)
		else:
			logger.warning(f"‚ö†Ô∏è –ù–µ–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å [@{ConfigBot.USERNAME(callback_query)}] –ø–æ–ø—ã—Ç–∞–ª—Å—è –∑–∞–π—Ç–∏ –≤ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è.")
	except Exception as e:
		logger.error("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: %s", e)