from data.loader import dp, bot
from data.config import ConfigBot
from data.config_Keyboard import ConfigReplyKeyboard, ConfigInlineKeyboard
from data.loader_keyboard import LoaderInlineKeyboards
from data.states_groups import MarketState

from database.requests.market_db import load_market_data, is_market_in_data
from database.requests.user_db import load_user_data, is_user_in_data
from database.requests.version_db import get_bot_version

from misc.libraries import types, FSMContext, Union
from misc.loggers import logger

@dp.message_handler(lambda message: message.text == f"{ConfigReplyKeyboard().MARKET}")
@dp.callback_query_handler(lambda callback_data: callback_data.data == "BACK_MARKET_USERS", state = [MarketState.CheckMarketState])
async def market_handler(message_or_callbackQuery: Union[types.Message, types.CallbackQuery], state: FSMContext) -> None:
	"""–û–±—ä—è–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å –≤—ã–≤–æ–¥–æ–º –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ, –¥–∞–Ω–Ω—ã—Ö –º–∞—Ä–∫–µ—Ç–∞ –∏ –≤–µ—Ä—Å–∏–∏ –±–æ—Ç–∞"""
	MARKET_DATA_DB = load_market_data()
	VERSION_BOT = get_bot_version()
	USER_DATA_DB = load_user_data()

	try:
		"""–û–±—ä—è–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é —Å –≤—ã–≤–æ–¥–æ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ: USER_ID"""
		USER_ID = ConfigBot.USERID(message_or_callbackQuery)

		if is_user_in_data(USER_ID, USER_DATA_DB):
			"""–û–±—ä—è–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é —Å –≤—ã–≤–æ–¥–æ–º —Ç–µ–∫—É—â–µ–π –≤–µ—Ä—Å–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
			USER_VERSION_BOT = ConfigBot.USERVERSIONBOT(message_or_callbackQuery)

			if USER_VERSION_BOT == VERSION_BOT:
				""""–û–±—ä—è–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ –≤—ã–≤–æ–¥–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –º–µ–Ω—é –º–∞—Ä–∫–µ—Ç–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
				market_menu_users_inline_keyboard = LoaderInlineKeyboards(message_or_callbackQuery).INLINE_KEYBOARDS_MARKETMENU_USERS

				if isinstance(message_or_callbackQuery, types.Message):
					await message_or_callbackQuery.answer(f"üí¨ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤–æ –≤–∫–ª–∞–¥–∫—É <b>¬´{ConfigReplyKeyboard().MARKET[4:]}¬ª</b>.\n\n"
															f" ‚Ä¢ –ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –≤–∞—Å <b>{ConfigBot.GETLENUSERS(MARKET_DATA_DB)}</b> —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ.\n\n"
															f"‚ùï –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ–ª–Ω–æ–≥–æ <b>—Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤</b> –∏ <b>–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–µ—Ç–∞–ª–µ–π</b>, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É <b>¬´{ConfigInlineKeyboard().CHECK_MARKET[2:-2]}¬ª</b>.", 
															reply_markup = market_menu_users_inline_keyboard)
					
					await state.finish()

				elif isinstance(message_or_callbackQuery, types.CallbackQuery):
					await bot.edit_message_text( f"üí¨ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤–æ –≤–∫–ª–∞–¥–∫—É <b>¬´{ConfigReplyKeyboard().MARKET[4:]}¬ª</b>.\n\n"
													f" ‚Ä¢ –ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –≤–∞—Å <b>{len(MARKET_DATA_DB)}</b> —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ.\n\n"
													f"‚ùï –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ–ª–Ω–æ–≥–æ <b>—Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤</b> –∏ <b>–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–µ—Ç–∞–ª–µ–π</b>, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É <b>¬´{ConfigInlineKeyboard().CHECK_MARKET[2:-2]}¬ª</b>.",
													message_or_callbackQuery.from_user.id,
													message_or_callbackQuery.message.message_id,
													reply_markup = market_menu_users_inline_keyboard)
					
					await state.finish()
				else:
					logger.warning("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–µ–ª —Å–±–æ–π —Å ISINSTANCE.")

			elif USER_VERSION_BOT != VERSION_BOT:
				if isinstance(message_or_callbackQuery, types.Message):
					await message_or_callbackQuery.answer(f"üí¨ <a href='https://t.me/{ConfigBot.USERNAME(message_or_callbackQuery)}'>{ConfigBot.USERLASTNAME(message_or_callbackQuery)}</a>! –†–∞–¥—ã —Å–æ–æ–±—â–∏—Ç—å, —á—Ç–æ –≤—ã—à–ª–∞ <b>–Ω–æ–≤–∞—è –≤–µ—Ä—Å–∏—è</b> –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞ —Å —É–ª—É—á—à–µ–Ω–∏—è–º–∏ –∏ –Ω–æ–≤—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏.\n\n" 
															"‚ùï –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –Ω–æ–≤–∏–Ω–æ–∫ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π <b><code>/update</code></b>.\n\n" 
															"–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–µ –≤–Ω–∏–º–∞–Ω–∏–µ –∏ –∞–∫—Ç–∏–≤–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞! ü§ç")
					
				elif isinstance(message_or_callbackQuery, types.CallbackQuery):
					await bot.send_message(message_or_callbackQuery.message.chat.id, 
											f"üí¨ <a href='https://t.me/{ConfigBot.USERNAME(message_or_callbackQuery)}'>{ConfigBot.USERLASTNAME(message_or_callbackQuery)}</a>! –†–∞–¥—ã —Å–æ–æ–±—â–∏—Ç—å, —á—Ç–æ –≤—ã—à–ª–∞ <b>–Ω–æ–≤–∞—è –≤–µ—Ä—Å–∏—è</b> –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞ —Å —É–ª—É—á—à–µ–Ω–∏—è–º–∏ –∏ –Ω–æ–≤—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏.\n\n" 
											"‚ùï –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –Ω–æ–≤–∏–Ω–æ–∫ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π <b><code>/update</code></b>.\n\n" 
											"–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–µ –≤–Ω–∏–º–∞–Ω–∏–µ –∏ –∞–∫—Ç–∏–≤–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞! ü§ç")
				else:
					logger.warning("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–µ–ª —Å–±–æ–π —Å ISINSTANCE.")
			else:
				logger.warning("‚ö†Ô∏è USER_VERSION_BOT –Ω–µ —Ä–æ–≤–Ω—è–µ—Ç—Å—è –∫ —Ç–µ–∫—É—â–µ–π –≤–µ—Ä—Å–∏–∏ –±–æ—Ç–∞.")
		else:
			logger.warning(f"‚ö†Ô∏è –ù–µ–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å [@{ConfigBot.USERNAME(message_or_callbackQuery)}] –ø–æ–ø—ã—Ç–∞–ª—Å—è –∑–∞–π—Ç–∏ –≤ –º–∞—Ä–∫–µ—Ç.")
	except Exception as e:
		logger.error("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: %s", e)

"""–°–æ–∑–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ"""
@dp.callback_query_handler(lambda callback_data: callback_data.data == "NONE_SEARCH", state = MarketState.CheckMarketState)
async def back_market_check_user_handler(callback_query: types.CallbackQuery, state: FSMContext) -> MarketState:
	"""–û–±—ä—è–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å –≤—ã–≤–æ–¥–æ–º –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏ –¥–∞–Ω–Ω—ã—Ö –º–∞—Ä–∫–µ—Ç–∞"""
	USER_DATA_DB = load_user_data()
	MARKET_DATA_DB = load_market_data()

	try:
		"""–û–±—ä—è–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é —Å –≤—ã–≤–æ–¥–æ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ: USER_ID"""
		USER_ID = ConfigBot.USERID(callback_query)

		if is_user_in_data(USER_ID, USER_DATA_DB):
				await bot.delete_message(callback_query.message.chat.id, callback_query.message.message_id)				

				""""–û–±—ä—è–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ –≤—ã–≤–æ–¥–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –º–µ–Ω—é –º–∞—Ä–∫–µ—Ç–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
				market_menu_users_inline_keyboard = LoaderInlineKeyboards(callback_query).INLINE_KEYBOARDS_MARKETMENU_USERS

				await bot.send_message(callback_query.message.chat.id,
									   f"üí¨ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤–æ –≤–∫–ª–∞–¥–∫—É <b>¬´{ConfigReplyKeyboard().MARKET[4:]}¬ª</b>.\n\n"
									   f" ‚Ä¢ –ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –≤–∞—Å <b>{len(MARKET_DATA_DB)}</b> —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ.\n\n"
									   f"‚ùï –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ–ª–Ω–æ–≥–æ <b>—Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤</b> –∏ <b>–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–µ—Ç–∞–ª–µ–π</b>, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É <b>¬´{ConfigInlineKeyboard().CHECK_MARKET[2:-2]}¬ª</b>.",
									   reply_markup = market_menu_users_inline_keyboard)
					
				await state.finish()
		else:
			logger.warning(f"‚ö†Ô∏è –ù–µ–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å [@{ConfigBot.USERNAME(callback_query)}] –ø–æ–ø—ã—Ç–∞–ª—Å—è –≤–æ–π—Ç–∏ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã.")
	except Exception as e:
		logger.error("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: %s", e)

"""–°–æ–∑–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ"""
@dp.callback_query_handler(lambda callback_data: callback_data.data == "CHECK_MARKET_USERS")
async def check_market_user_handler(callback_query: types.CallbackQuery) -> MarketState:
	"""–û–±—ä—è–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å –≤—ã–≤–æ–¥–æ–º –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏ –¥–∞–Ω–Ω—ã—Ö –º–∞—Ä–∫–µ—Ç–∞"""
	USER_DATA_DB = load_user_data()
	MARKET_DATA_DB = load_market_data()

	try:
		"""–û–±—ä—è–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é —Å –≤—ã–≤–æ–¥–æ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ: USER_ID"""
		USER_ID = ConfigBot.USERID(callback_query)

		if is_user_in_data(USER_ID, USER_DATA_DB):
				"""–û–±—ä—è–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é —Å –≤—ã–≤–æ–¥–æ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è –≤ –º–µ–Ω—é –º–∞—Ä–∫–µ—Ç–∞"""
				back_market_inline_keyboard = LoaderInlineKeyboards(callback_query).INLINE_KEYBOARDS_BACK_MARKET

				await bot.edit_message_text("üí¨ –î–ª—è <b>–ø—Ä–æ—Å–º–æ—Ç—Ä–∞</b> –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–æ–≤–∞—Ä–µ –≤–≤–µ–¥–∏—Ç–µ –µ–≥–æ –∞—Ä—Ç–∏–∫—É–ª –∏–∑ —Å–ø–∏—Å–∫–∞:\n\n"
											f"{ConfigBot.GETARTICLEMARKET(MARKET_DATA_DB, ConfigBot.USERID(callback_query))}\n\n"
											"–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –≤–∞—à—É –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –∫–æ—Ä–∑–∏–Ω–æ–π —Ç–æ–≤–∞—Ä–æ–≤.",
											callback_query.from_user.id,
											callback_query.message.message_id,
									   		reply_markup = back_market_inline_keyboard)

				"""–ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Ñ–∞–∑—É, –≥–¥–µ –≤–≤–æ–¥—è—Ç —Ç–æ–≤–∞—Ä –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ—Ä–∑–∏–Ω—É"""
				await MarketState.CheckMarketState.set()
		else:
			logger.warning(f"‚ö†Ô∏è –ù–µ–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å [@{ConfigBot.USERNAME(callback_query)}] –ø–æ–ø—ã—Ç–∞–ª—Å—è –≤–æ–π—Ç–∏ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã.")
	except Exception as e:
		logger.error("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: %s", e)

@dp.message_handler(state = MarketState.CheckMarketState)
async def check_item_market_user_handler(message: types.Message) -> str:
	"""–û–±—ä—è–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å –≤—ã–≤–æ–¥–æ–º –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏ –¥–∞–Ω–Ω—ã—Ö –º–∞—Ä–∫–µ—Ç–∞"""
	USER_DATA_DB = load_user_data()
	MARKET_DATA_DB = load_market_data()

	try:
		"""–û–±—ä—è–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é —Å –≤—ã–≤–æ–¥–æ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ: USER_ID"""
		USER_ID = ConfigBot.USERID(message)

		if is_user_in_data(USER_ID, USER_DATA_DB):
			"""–û–±—ä—è–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é c –≤—ã–≤–æ–¥–æ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: USER_MESSAGE"""
			USER_MESSAGE = ConfigBot.USERMESSAGE(message)

			if is_market_in_data(USER_MESSAGE, MARKET_DATA_DB):
				"""–û–±—ä—è–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é —Å –≤—ã–≤–æ–¥–æ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è –≤ —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ –º–∞—Ä–∫–µ—Ç–∞"""
				back_market_check_inline_keyboards = LoaderInlineKeyboards(message).INLINE_KEYBOARDS_BACK_MARKET_CHECK

				"""–û–±—ä—è–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é —Å –≤—ã–≤–æ–¥–æ–º —Å–æ–æ–±—â–µ–Ω–∏—è –æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ —Ç–æ–≤–∞—Ä–∞ –∏–∑ –º–∞—Ä–∫–µ—Ç–∞"""
				INFO_ITEM_MARKET_MESSAGE = f"üí¨ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–µ:\n\n" \
										   f"<a href='{ConfigBot.GETMARKET(USER_MESSAGE, 'URL_SITE')}'>{ConfigBot.GETMARKET(USER_MESSAGE, 'NAME_MARKET')}</a> ‚Ä¢ <code>{USER_MESSAGE}</code>\n\n" \
										   f" ‚Ä¢ <b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</b> {ConfigBot.GETMARKET(USER_MESSAGE, 'MESSAGE')}\n\n" \
										   f" ‚Ä¢ <b>–¶–µ–Ω–∞:</b> {ConfigBot.GETPRICE(USER_MESSAGE)} ‚ÇΩ\n\n" \
											"–ï—Å–ª–∏ –≤–∞–º –Ω—É–∂–Ω–æ –Ω–∞–π—Ç–∏ –µ—â–µ –æ–¥–∏–Ω —Ç–æ–≤–∞—Ä, –≤—ã –º–æ–∂–µ—Ç–µ –≤–≤–µ—Å—Ç–∏ –Ω–æ–≤—ã–π –∞—Ä—Ç–∏–∫—É–ª –∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–∏—Å–∫."

				await bot.send_photo(message.chat.id, photo = f"{ConfigBot.GETMARKET(USER_MESSAGE, 'URL_PHOTO')}", caption = INFO_ITEM_MARKET_MESSAGE, reply_markup = back_market_check_inline_keyboards)
			
			else:
				await message.answer("‚ö†Ô∏è –ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –ø–æ—Ö–æ–∂–µ, —á—Ç–æ —Ç–æ–≤–∞—Ä —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º <b>–∞—Ä—Ç–∏–∫—É–ª–æ–º</b> –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –∫–æ—Ä–∑–∏–Ω–µ.\n\n"
						  			 "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –≤–≤–µ–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∞—Ä—Ç–∏–∫—É–ª, –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.")
		else:
			logger.warning(f"‚ö†Ô∏è –ù–µ–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å [@{ConfigBot.USERNAME(message)}] –ø–æ–ø—ã—Ç–∞–ª—Å—è –≤–æ–π—Ç–∏ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã.")
	except Exception as e:
		logger.error("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: %s", e)