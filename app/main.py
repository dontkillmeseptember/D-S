from aiogram import executor

from server.flask_app import keep_alive

from data.config import ConfigBot

from data.admin_db import load_admin_data

from data.loader import dp, bot, Create_JSON_file
from data.loader_handler import Loader_Handlers, Loader_Admin_Handlers

from misc.libraries import logging, asyncio
from misc.loggers import logger

"""–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –Ω—É–∂–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞"""
async def Start_bot() -> None:
	try:
		"""–í—ã–∑—ã–≤–∞–µ–º –Ω—É–∂–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è JSON —Ñ–∞–π–ª–æ–≤ –∏ –∑–∞–≥—Ä—É–∑–∫–∞ —Ö–∞–Ω–¥–ª–µ—Ä–æ–≤"""
		await {
			Create_JSON_file(),
			Loader_Handlers(),
			Loader_Admin_Handlers()
		}
	except Exception as e:
		logger.error("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: %s", e)

"""–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏"""
async def On_StartUP() -> str:
	try:
		"""–û–±—ä—è–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é —Å –≤—ã–≤–æ–¥–æ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏"""
		ADMIN_DATA_DB = load_admin_data()

		"""–ü–æ–ª—É—á–∞–µ–º chat_id –∏–∑ –¥–∞–Ω–Ω—ã—Ö JSON"""
		for chat_id, admin_data in ADMIN_DATA_DB.items():
			"""–ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–¥–º–∏–Ω–æ–≤: USER_LAST_NAME, USER_NAME"""
			USER_LAST_NAME = admin_data["USER_LAST_NAME"]
			USER_NAME = admin_data["USER_NAME"]

			await bot.send_message(chat_id = int(chat_id), text = f"üîî ‚Ä¢ {ConfigBot.GETCURRENTHOUR()}, <a href='{USER_NAME}'>{USER_LAST_NAME}</a>, –±–æ—Ç –∑–∞–ø—É—â–µ–Ω –≤ <b><i>{ConfigBot.GETTIMENOW()}</i></b>")

			return admin_data
	except Exception as e:
		logger.error("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: %s", e)
		
		return ADMIN_DATA_DB

if __name__ == '__main__':
	try:
		"""–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –Ω–∞ —Å—Ç–∞—Ä—Ç–∞–ø"""
		loop = asyncio.get_event_loop()
		loop.create_task(On_StartUP())

		"""–ó–∞–ø—É—Å–∫–∞–µ–º Flask —Å–µ—Ä–≤–µ—Ä"""
		keep_alive()

		"""–í—ã–∑—ã–≤–∞–µ–º –ª–æ–≥–≥–∏–Ω–≥ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏"""
		logging.basicConfig(level=logging.INFO)

		"""–ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ–ª–µ–≥—Ä–∞–º–º –±–æ—Ç"""
		executor.start_polling(dp, skip_updates=True)
	except Exception as e:
		logger.critical("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: %s", e)